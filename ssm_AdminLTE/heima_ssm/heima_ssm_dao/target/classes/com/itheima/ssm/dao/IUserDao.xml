<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.ssm.dao.IUserDao">
    <resultMap id="findByUsernameResultMap" type="userInfo" autoMapping="true">
        <id property="id" column="id"/>
        <collection property="roles" ofType="role" autoMapping="true">
            <id property="id" column="rid"/>
        </collection>
    </resultMap>
    <select id="findByUsername" parameterType="String" resultMap="findByUsernameResultMap">
        select
              u.id,
              u.email,
              u.username,
              u.password,
              u.phonenum,
              u.status,
              r.id rid,
              r.rolename,
              r.roledesc
        from
             users u left join users_role ur on u.id=ur.userid
                     left join role r on ur.roleid = r.id
        where
             u.username = #{username}
    </select>

    <select id="findAll" resultType="userInfo">
        select * from users
    </select>

    <insert id="save" parameterType="userInfo">
        insert into users(email,username,password,phoneNum,status) values(#{email},#{username},#{password},#{phoneNum},#{status})
    </insert>

    <resultMap id="findByIdResultMap" type="userInfo" autoMapping="true">
        <id column="id" property="id"/>
        <collection property="roles" ofType="role" autoMapping="true">
            <id property="id" column="rid"/>
            <collection property="permissions" ofType="permission" autoMapping="true">
                <id column="pid" property="id"/>
            </collection>
        </collection>
    </resultMap>
    <select id="findById" parameterType="String" resultMap="findByIdResultMap">

        select u.id,
               u.email,
               u.username,
               u.password,
               u.phonenum,
               u.status,
               r.id rid,
               r.rolename,
               r.roledesc,
               p.id pid,
               p.permissionname,
               p.url
        from
               users u left join users_role ur on u.id = ur.userid
                       left join role r on r.id = ur.roleid
                       left join role_permission rp on r.id = rp.roleid
                       left join permission p on p.id = rp.permissionid
        where
               u.id = #{id}
    </select>


    <select id="findUserByIdAndAllRole" parameterType="string" resultType="role">
        select * from role where id not in(select roleid from users_role where userid=#{id})
</select>

    <insert id="addRoleToUser" parameterType="string" >
        insert into users_role(userId,roleId) values (#{userId},#{roleId})
    </insert>
</mapper>
